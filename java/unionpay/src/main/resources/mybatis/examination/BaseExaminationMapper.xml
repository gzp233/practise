<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpdms.mapper.examination.BaseExaminationMapper">
    <resultMap id="BaseResultMap" type="com.cpdms.model.examination.BaseExamination">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="hospital_id" jdbcType="VARCHAR" property="hospitalId"/>
        <result column="examination_name" jdbcType="VARCHAR" property="examinationName"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="start_time" jdbcType="VARCHAR" property="startTime"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="be_dept_id" jdbcType="VARCHAR" property="beDeptId"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
    </resultMap>

    <resultMap id="otherResultMap" type="com.cpdms.model.examination.BaseExamination">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="hospital_id" jdbcType="VARCHAR" property="hospitalId"/>
        <result column="examination_name" jdbcType="VARCHAR" property="examinationName"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="start_time" jdbcType="VARCHAR" property="startTime"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="be_dept_id" jdbcType="VARCHAR" property="beDeptId"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <association property="baseHospital" javaType="com.cpdms.model.examination.BaseHospital">
            <result column="hospital_name" property="hospitalName"/>
        </association>
        <collection property="baseExaminationItemList" ofType="itemResult" javaType="ArrayList" column="id"
                    select="getItems"/>
    </resultMap>

    <resultMap id="itemResult" type="com.cpdms.model.examination.BaseExaminationItem">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
        <result column="item_desc" jdbcType="VARCHAR" property="itemDesc"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
	  	  	      	id,
       	  	      	hospital_id,
       	  	      	examination_name,
       	  	      	num,
       	  	      	order_num,
       	  	      	start_time,
       	  	      	end_time,
       	  	      	status,
       	  	      	create_date,
       	  	      	create_by,
       	  	      	be_dept_id,
       	  	      	update_date,
       	  	    	  	update_by
       	</sql>
    <select id="selectByExample" parameterType="com.cpdms.model.examination.BaseExaminationExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from base_examination
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from base_examination
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from base_examination
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.cpdms.model.examination.BaseExaminationExample">
        delete from base_examination
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <insert id="insert" parameterType="com.cpdms.model.examination.BaseExamination">
    insert into base_examination (
      	  	       id,
       	  	       hospital_id,
       	  	       examination_name,
       	  	       num,
       	  	       order_num,
       	  	       start_time,
       	  	       end_time,
       	  	       status,
       	  	       create_date,
       	  	       create_by,
       	  	       be_dept_id,
       	  	       update_date,
       	  	    	  update_by
       	    )
    values (
	  	  	      	#{id,jdbcType=VARCHAR},
       	  	      	#{hospitalId,jdbcType=VARCHAR},
       	  	      	#{examinationName,jdbcType=VARCHAR},
       	  	      	#{num,jdbcType=INTEGER},
       	  	      	#{orderNum,jdbcType=INTEGER},
       	  	      	#{startTime,jdbcType=VARCHAR},
       	  	      	#{endTime,jdbcType=VARCHAR},
       	  	      	#{status,jdbcType=TINYINT},
       	  	      	#{createDate,jdbcType=TIMESTAMP},
       	  	      	#{createBy,jdbcType=VARCHAR},
       	  	      	#{beDeptId,jdbcType=VARCHAR},
       	  	      	#{updateDate,jdbcType=TIMESTAMP},
       	  	    	  #{updateBy,jdbcType=VARCHAR}
       	    )
  </insert>

    <insert id="insertSelective" parameterType="com.cpdms.model.examination.BaseExamination">
        insert into base_examination
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="id != null">
                id,
            </if>


            <if test="hospitalId != null">
                hospital_id,
            </if>


            <if test="examinationName != null">
                examination_name,
            </if>


            <if test="num != null">
                num,
            </if>

            <if test="orderNum != null">
                order_num,
            </if>


            <if test="startTime != null">
                start_time,
            </if>


            <if test="endTime != null">
                end_time,
            </if>


            <if test="status != null">
                status,
            </if>


            <if test="createDate != null">
                create_date,
            </if>


            <if test="createBy != null">
                create_by,
            </if>


            <if test="beDeptId != null">
                be_dept_id,
            </if>


            <if test="updateDate != null">
                update_date,
            </if>


            <if test="updateBy != null">
                update_by,
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="hospitalId != null">
                #{hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="examinationName != null">
                #{examinationName,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test="orderNum != null">
                #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="beDeptId != null">
                #{beDeptId,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.cpdms.model.examination.BaseExaminationExample"
            resultType="java.lang.Long">
        select count(*) from base_examination
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map">
        update base_examination
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.hospitalId != null">
                hospital_id = #{record.hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="record.examinationName != null">
                examination_name = #{record.examinationName,jdbcType=VARCHAR},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test="record.orderNum != null">
                order_num = #{record.orderNum,jdbcType=INTEGER},
            </if>
            <if test="record.startTime != null">
                start_time = #{record.startTime,jdbcType=VARCHAR},
            </if>
            <if test="record.endTime != null">
                end_time = #{record.endTime,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.beDeptId != null">
                be_dept_id = #{record.beDeptId,jdbcType=VARCHAR},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>


    <update id="updateByExample" parameterType="map">
        update base_examination
        set
        id = #{record.id,jdbcType=VARCHAR},
        hospital_id = #{record.hospitalId,jdbcType=VARCHAR},
        examination_name = #{record.examinationName,jdbcType=VARCHAR},
        num = #{record.num,jdbcType=INTEGER},
        order_num = #{record.orderNum,jdbcType=INTEGER},
        start_time = #{record.startTime,jdbcType=VARCHAR},
        end_time = #{record.endTime,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=TINYINT},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        create_by = #{record.createBy,jdbcType=VARCHAR},
        be_dept_id = #{record.beDeptId,jdbcType=VARCHAR},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
        update_by = #{record.updateBy,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>


    <update id="updateByPrimaryKeySelective" parameterType="com.cpdms.model.examination.BaseExamination">
        update base_examination
        <set>
            <if test="hospitalId != null">
                hospital_id = #{hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="examinationName != null">
                examination_name = #{examinationName,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test="orderNum != null">
                order_num = #{orderNum,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="beDeptId != null">
                be_dept_id = #{beDeptId,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
        </set>
        where
        id = #{id,jdbcType=VARCHAR}

    </update>


    <update id="updateByPrimaryKey" parameterType="com.cpdms.model.examination.BaseExamination">
    update base_examination
    set
             	        	    	 			hospital_id = #{hospitalId,jdbcType=VARCHAR},
		     	        	    	 			examination_name = #{examinationName,jdbcType=VARCHAR},
		     	        	    	 			num = #{num,jdbcType=INTEGER},
		     	        	    	 			order_num = #{orderNum,jdbcType=INTEGER},
		     	        	    	 			start_time = #{startTime,jdbcType=VARCHAR},
		     	        	    	 			end_time = #{endTime,jdbcType=VARCHAR},
		     	        	    	 			status = #{status,jdbcType=TINYINT},
		     	        	    	 			create_date = #{createDate,jdbcType=TIMESTAMP},
		     	        	    	 			create_by = #{createBy,jdbcType=VARCHAR},
		     	        	    	 			be_dept_id = #{beDeptId,jdbcType=VARCHAR},
		     	        	    	 			update_date = #{updateDate,jdbcType=TIMESTAMP},
		     	        	    	 			update_by = #{updateBy,jdbcType=VARCHAR}
		     	        where
            id = #{id,jdbcType=VARCHAR}

  </update>

    <select id="getList" parameterType="com.cpdms.model.examination.BaseExamination" resultMap="otherResultMap">
        select a.*,b.hospital_name
        from base_examination a left join base_hospital b on a.hospital_id=b.id where a.status=1
        <if test="examinationName != null and examinationName != ''">and a.examination_name like #{examinationName}</if>
        <if test="hospitalId != null">and a.hospital_id=#{hospitalId}</if>
        <if test="endTime != null">and a.end_time &gt; #{endTime}</if>
        order by a.create_date desc
    </select>

    <select id="getOne" parameterType="java.lang.String" resultMap="otherResultMap">
    select a.*,b.hospital_name
    from base_examination a left join base_hospital b on a.hospital_id=b.id where a.id=#{id}
  </select>

    <select id="getItems" resultMap="itemResult" parameterType="string">
        select a.* from base_examination_item a left join ref_examination_item b on a.id=b.examination_item_id
 where b.examination_id=#{id}
    </select>
</mapper>
